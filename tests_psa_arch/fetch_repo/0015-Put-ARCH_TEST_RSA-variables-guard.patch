From 9831beb10c519f4c8e6c110bd811d68a890da7cf Mon Sep 17 00:00:00 2001
From: Antonio de Angelis <Antonio.deAngelis@arm.com>
Date: Tue, 15 Jul 2025 13:51:51 +0100
Subject: [PATCH 15/17] Put ARCH_TEST_RSA variables guard

ARCH_TEST_RSA should control whether some of the variables in
test_crypto_common.c should be compiled in or not.

Signed-off-by: Antonio de Angelis <antonio.deangelis@arm.com>
---
 api-tests/dev_apis/crypto/common/test_crypto_common.c | 2 ++
 api-tests/dev_apis/crypto/test_c040/test_c040.c       | 8 ++++----
 2 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/api-tests/dev_apis/crypto/common/test_crypto_common.c b/api-tests/dev_apis/crypto/common/test_crypto_common.c
index 74987ab..470d2b9 100644
--- a/api-tests/dev_apis/crypto/common/test_crypto_common.c
+++ b/api-tests/dev_apis/crypto/common/test_crypto_common.c
@@ -30,6 +30,7 @@ const uint8_t key_data[] = {
  0x33, 0x77, 0xFF, 0x80, 0xC0, 0xE0, 0xF0, 0xF8,
  0xFC, 0xFE, 0xFF, 0xC0, 0xF0, 0xFC, 0xE0, 0xEE};
 
+#ifdef ARCH_TEST_RSA
 const uint8_t rsa_128_key_pair[] = {
 0x30, 0x82, 0x02, 0x5e, 0x02, 0x01, 0x00, 0x02, 0x81, 0x81, 0x00, 0xaf, 0x05,
 0x7d, 0x39, 0x6e, 0xe8, 0x4f, 0xb7, 0x5f, 0xdb, 0xb5, 0xc2, 0xb1, 0x3c, 0x7f,
@@ -223,6 +224,7 @@ const uint8_t rsa_256_key_data[] = {
  0xAD, 0x25, 0x6A, 0xBD, 0xF2, 0xEA, 0xED, 0xFA, 0x57, 0xFC, 0xE5, 0x34, 0xC6, 0xC1,
  0x0F, 0x71, 0x2D, 0xD2, 0x08, 0x10, 0x1B, 0xAD, 0x44, 0x41, 0xE0, 0xFE, 0x79, 0xA0,
  0x63, 0x93, 0x8A, 0xB1, 0x5D, 0xE9, 0xB0, 0xEE, 0x6F, 0x02, 0x03, 0x01, 0x00, 0x01};
+ #endif /* ARCH_TEST_RSA */
 
 const uint8_t ec_key_data[] = {
  0x04, 0xde, 0xa5, 0xe4, 0x5d, 0x0e, 0xa3, 0x7f, 0xc5, 0x66, 0x23, 0x2a, 0x50, 0x8f,
diff --git a/api-tests/dev_apis/crypto/test_c040/test_c040.c b/api-tests/dev_apis/crypto/test_c040/test_c040.c
index a3c564a..9f9fbc5 100644
--- a/api-tests/dev_apis/crypto/test_c040/test_c040.c
+++ b/api-tests/dev_apis/crypto/test_c040/test_c040.c
@@ -122,14 +122,14 @@ int32_t psa_asymmetric_decrypt_test(caller_security_t caller __UNUSED)
 
 int32_t psa_asymmetric_decrypt_negative_test(caller_security_t caller __UNUSED)
 {
-    int32_t                 status;
-    size_t                  get_output_length;
-    psa_key_id_t            key = 1;
-
     if (valid_test_input_index < 0)
         return RESULT_SKIP(VAL_STATUS_NO_TESTS);
 
 #if defined(ARCH_TEST_RSA_1024) || defined(ARCH_TEST_RSA_PKCS1V15_CRYPT)
+    int32_t                 status;
+    size_t                  get_output_length;
+    psa_key_id_t            key = 1;
+
     /* Initialize the PSA crypto library*/
     status = val->crypto_function(VAL_CRYPTO_INIT);
     TEST_ASSERT_EQUAL(status, PSA_SUCCESS, TEST_CHECKPOINT_NUM(1));
-- 
2.43.0

